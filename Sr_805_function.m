function C = Sr_805_function(zz,zdata)

load('parameters_su_805.mat');
load('parameters_Ca_805.mat');

alpha=zz(1);
beta=zz(2);
gamma=zz(3);
v=zz(4);
gra_sr=zz(5);

gra_su = x805(6);
gra_ca = y805(6);

V=0;
Ks=x805(5);

%% ============define parameters==============================
K_sr_sea = 0.194;    % Sr/Ca ratio in the solid over seawater

rho_s = 2.7;    % g/cm^3 ->g/m^3
rho_f = 1;      % g/cm^3 ->g/m^3

z_step = [0;1;1;1;1;1;1;1;1;1;0.990000000000000;0.990000000000000;0.990000000000000;0.990000000000000;0.990000000000000;0.990000000000000;0.990000000000000;0.990000000000000;0.990000000000000;0.980000000000000;0.980000000000000;0.980000000000000;0.980000000000000;0.980000000000000;0.980000000000000;0.980000000000000;0.980000000000000;0.980000000000000;0.970000000000000;0.970000000000000;0.970000000000000;0.970000000000000;0.970000000000000;0.970000000000000;0.970000000000000;0.970000000000000;0.970000000000000;0.970000000000000;0.960000000000000;0.960000000000000;0.960000000000000;0.960000000000000;0.960000000000000;0.960000000000000;0.960000000000000;0.960000000000000;0.960000000000000;0.960000000000000;0.950000000000000;0.950000000000000;0.950000000000000;0.950000000000000;0.950000000000000;0.950000000000000;0.950000000000000;0.950000000000000;0.950000000000000;0.950000000000000;0.950000000000000;0.940000000000000;0.940000000000000;0.940000000000000;0.940000000000000;0.940000000000000;0.940000000000000;0.940000000000000;0.940000000000000;0.940000000000000;0.940000000000000;0.940000000000000;0.940000000000000;0.930000000000000;0.930000000000000;0.930000000000000;0.930000000000000;0.930000000000000;0.930000000000000;0.930000000000000;0.930000000000000;0.930000000000000;0.930000000000000;0.930000000000000;0.930000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.920000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.910000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.900000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.890000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.880000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.870000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.860000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.850000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.840000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.830000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.820000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.810000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.800000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.790000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.780000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.770000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.770000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.760000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.750000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.730000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.740000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.730000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.720000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.710000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000;0.700000000000000];
J = length(z_step);
N = J;

t_step = 0.038509887841343;
t = zeros(N,1);
z = zeros(N,1);

for i = 2:N
    t(i) = t(i-1) + t_step;
end

for i = 2:N
    z(i) = z(i-1) + z_step(i);
end

f_a = 0;
f_b = 70.2/100;
f_c = 1/0.00076;
phi_z = f_a + f_b*exp(-z/f_c);  % porosity over depth

fc=1.0;

R_d = zeros(N,J);
R_net = zeros(N,J);
R_p = zeros(N,J);

for n = 1:N
    for j = 1:n
        R_net(n,j) = y805(2)+y805(3)*exp(-z(n-j+1)/y805(4));
    end
end


temp_T = 0.01651*z+275.8;

K_sr = zeros(length(z),1);

for i = 1:length(z)
    K_sr(i)=0.02;
end

D0 = zeros(length(z),1);
D = zeros(length(z),1);

for i = 1:length(z)
    D0(i) = (3.69+ 0.169 * (temp_T(i)-273.15)) * 3.65 * 24 * 36;
    D(i) = D0(i) / (1-log(phi_z(i)^2));
end

D_so4=1.53*D;

L = 0.5;
k_su = x805(3);
G0 = x805(2);  

% K_sp is from fitting data, fitting celestite
K_sp = zeros(J,1);
for i = 1 :J
    K_sp(i) = -0.0007 * z(i) + 18.7+2.5;
end

for n = 1:N
    for j = 1:n
        R_d (n,j) = alpha+beta*exp(-z(n-j+1)/gamma);
        R_p(n,j) = R_d(n,j) - R_net(n,j);
    end
end

%% ==========Ca calculation and best fit===========

Ca_pore = zeros(N,J);
K_aq = 0;   % adsoprtion coefficient


for n =1:N
    Ca_pore(n,n:n+1) = 10.62 + 0.161*t(N-n+1);
end

Ca_pore(2,1) = Ca_pore(2,2)+ z_step(2)* gra_ca;


%-----calculation
for n = 2: N-1
    
    a10 = 2*D(n-2+1)*t_step/z_step(n-2+2)^2;
    b10 = t_step*v/z_step(n-2+2);
    
    Ca_pore(n+1,2) = ((a10-b10)*Ca_pore(n,2+1) + (a10+b10)*(Ca_pore(n, 3) + 2 * z_step(n)* gra_ca) + (1-a10)*Ca_pore(n-1,2) + 2*10*1000 * t_step * R_net(n-2+1) *fc* rho_s / rho_f * (1-phi_z(n-2+2)) / phi_z(n-2+2)) / (1+a10);
    
    for j = 3:n
        
        a1 = 2*D(n-j+1)*t_step/z_step(n-j+2)^2;
        b1 = t_step*v/z_step(n-j+2);
        
        Ca_pore(n+1,j) = ((a1-b1)*Ca_pore(n,j+1) + (a1+b1)*Ca_pore(n,j-1) + (1-a1)*Ca_pore(n-1,j) + 2*10*1000 * t_step * R_net(n-j+1) *fc* rho_s / rho_f * (1-phi_z(n-j+2)) / phi_z(n-j+2)) / (1+a1);
        
    end
    
end

Ca_pore(:,1)=Ca_pore(:,2);


for n = 1:N
    for j = 1: n
        k(n,j) = K_sr(n-j+1) * 10 / Ca_pore(n,j) *1000;
       
    end
end

%% =========== Sulfate reduction model ==========

G= zeros(N,J);
G(:,1) = G0;
G(1,2) = G0;

for i = 1:N
    G(i,i:i+1) = G0;
end

C_su=zeros(N,J);

%---------boundary condition of sulfate in the pore water---------
Sea_sulfate=zeros(N,1);
for i = 1: N
    Sea_sulfate(i) = -0.15 * t(i) + 28;
end

for i = 1:N
    C_su(i,i:i+1) = Sea_sulfate(N-i+1);      % initial value of sulfate in the pore water
end

C_su(:,1) = Sea_sulfate(end);

%% ============ Sr and Sulfate calculation ===========

C_s = zeros(N, J); % in solid (ppm)
C_f = zeros(N, J); % in pore fluid (ppm)

% -----------Initial / Boundary Conditions-----------------

seawater805 = ones(1,N);
solid0 = zeros(1,N);

K = zeros(N,1);     % Sr/Sr2+ coefficient between solid and seawater
Ca_sea = zeros(N,1);

for n = 1: N
    Ca_sea(n) = 10.62+0.161*t(n);
end

for n = 1:N
    K(n) = K_sr_sea * 10 / Ca_sea(n)*1000;
end

% assume the initial condition of seawater
load('seawater805.mat')

for i = 1:N
    solid0(i) = K (i) * seawater805(i);
end

for i = 1:N
    C_s(i,i:i+1) = solid0(N-i+1);  %initial value at the lastest deposit carbonate solid
end
C_s(1,2) = solid0(N);

for i = 1:N
    C_f(i, i:i+1) = seawater805(N-i+1);  %initial value at the lastest pore water
end

C_f(2,1) = C_f(2,2)+z_step(2)* gra_sr;

% -----Calculate the first concentration in solid and pore water-


for n = 2:N-1
    
    a10 = 2*D(n-2+1)*t_step/z_step(n-2+2)^2;
    a10_so4 = 2*D_so4(n-2+1)*t_step/z_step(n-2+2)^2;
    b10 = t_step*v/z_step(n-2+2);
    b20 = 2*V*t_step/z_step(n-2+2);
    
    a20 = 2*t_step*R_p(n-1,2)*rho_s/rho_f*(1-phi_z(n-2+2))/phi_z(n-2+2);  % attention the z(2) always represent the bottom
    a30 = R_d(n-1,2)*2*t_step;
   
    
    C_f(n+1,2) = (a10*C_f(n,2+1)+a10*C_f(n,2-1) + (1-a10-a20*k(n-1,2))*C_f(n-1,2) + 2*t_step*R_d(n-1,2)*rho_s/rho_f*(1-phi_z(n-2+2))/phi_z(n-2+2)*C_s(n-1,2)) / (1+a10);
    C_s(n+1,2) = (1-a30)*C_s(n-1,2) + R_p(n-1,2)*2*t_step*k(n-1,2)*C_f(n-1,2);
    
    C_su(n+1,2) = ((a10_so4-b10)*C_su(n,2+1)+(a10_so4+b10)*(C_su(n, 3)+ 2 * z_step(n)* gra_su)+(1-a10_so4)*C_su(n-1,2)-2*t_step*k_su*L*G(n-1,2)*C_su(n-1,2)/(C_su(n-1,2)+Ks))/(1+a10_so4);
    G(n+1,2) = G(n-1,2) * (1 - 2*k_su*t_step*C_su(n-1,2)/(Ks +C_su(n-1,2)));
    
    if C_su(n+1,2) < 0
        C_su(n+1,2) = 0;
    end
    
    for j = 3:n
        
        a1 = 2*D(n-j+1)*t_step/z_step(n-j+2)^2;
        a1_so4 = 2*D_so4(n-j+1)*t_step/z_step(n-j+2)^2;
        b1 = t_step*v/z_step(n-j+2);
        b2 = 2*V*t_step/z_step(n-j+2);
        
        a2 = 2*t_step*R_p(n-1,j)*rho_s/rho_f*(1-phi_z(n-j+2))/phi_z(n-j+2);  % attention the z(2) always represent the bottom
        a3 = R_d(n-1,j)*2*t_step;
        
        C_f(n+1,j) = (a1*C_f(n,j+1)+a1*C_f(n,j-1) + (1-a1-a2*k(n-1,j))*C_f(n-1,j) + 2*t_step*R_d(n-1,j)*rho_s/rho_f*(1-phi_z(n-j+2))/phi_z(n-j+2)*C_s(n-1,j)) / (1+a1);
        C_s(n+1,j) = (1-a3)*C_s(n-1,j) + R_p(n-1,j)*2*t_step*k(n-1,j)*C_f(n-1,j);
        
        C_su(n+1,j) = ((a1_so4-b1)*C_su(n,j+1)+(a1_so4+b1)*C_su(n,j-1)+(1-a1_so4)*C_su(n-1,j)-2*t_step*k_su*L*G(n-1,j)*C_su(n-1,j)/(C_su(n-1,j)+Ks))/(1+a1_so4);
        G(n+1,j) = G(n-1,j) * (1 - 2*k_su*t_step*C_su(n-1,j)/(Ks +C_su(n-1,j))) - b2 * G(n,j+1) + b2 * G(n,j-1);
        
        if C_su(n+1,j) < 0
            C_su(n+1,j) = 0;
        end
        % judge the precipitation of SrSO4
        
        if C_su(n+1,j) * C_f(n+1,j)  >=  K_sp(n+1-j+1)
            C_f(n+1,j) = K_sp(n+1-j+1)/C_su(n+1,j);
        end
    end
    
    C_f(n+1,1) = C_f(n+1,3) + 2*z_step(n+1)* gra_sr;
    C_s(n+1,1) = C_s(n+1,3);
    C_su(n+1,1) = C_su(n+1,3) + 2*z_step(n+1)* gra_su;
    
end
C=interp1(z(1:N),fliplr(C_f(N,1:J)),zdata);

